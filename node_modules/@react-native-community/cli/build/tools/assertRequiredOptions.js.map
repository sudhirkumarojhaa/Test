{"version":3,"sources":["../../src/tools/assertRequiredOptions.ts"],"names":["assertRequiredOptions","options","passedOptions","forEach","opt","option","Option","name","required","long","Error"],"mappings":";;;;;;;AAQA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AATA;;;;;;;;AAgBA;AACA;AACA;AACe,SAASA,qBAAT,CACbC,OADa,EAEbC,aAFa,EAGb;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgBC,GAAG,IAAI;AACrB,UAAMC,MAAM,GAAG,KAAIC,mBAAJ,EAAWF,GAAG,CAACG,IAAf,CAAf;;AAEA,QAAI,CAACF,MAAM,CAACG,QAAZ,EAAsB;AACpB;AACD;;AAED,UAAMD,IAAI,GAAG,yBAAUF,MAAM,CAACI,IAAjB,CAAb;;AAEA,QAAI,CAACP,aAAa,CAACK,IAAD,CAAlB,EAA0B;AACxB;AACA,YAAM,IAAIG,KAAJ,CAAW,WAAUL,MAAM,CAACI,IAAK,cAAjC,CAAN;AACD;AACF,GAbD;AAcD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\nimport {Option} from 'commander';\nimport {camelCase} from 'lodash';\nimport {CommandOption} from '@react-native-community/cli-types';\n\ntype PassedOptions = {\n  [key: string]: unknown;\n};\n\n// Commander.js has a 2 years old open issue to support <...> syntax\n// for options. Until that gets merged, we run the checks manually\n// https://github.com/tj/commander.js/issues/230\nexport default function assertRequiredOptions(\n  options: CommandOption<any>[],\n  passedOptions: PassedOptions,\n) {\n  options.forEach(opt => {\n    const option = new Option(opt.name);\n\n    if (!option.required) {\n      return;\n    }\n\n    const name = camelCase(option.long);\n\n    if (!passedOptions[name]) {\n      // Provide commander.js like error message\n      throw new Error(`Option \"${option.long}\" is missing`);\n    }\n  });\n}\n"]}