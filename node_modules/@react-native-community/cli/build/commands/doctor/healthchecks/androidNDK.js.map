{"version":3,"sources":["../../../../src/commands/doctor/healthchecks/androidNDK.ts"],"names":["label","description","getDiagnostics","SDKs","androidSdk","version","needsToBeFixed","versionRange","versionRanges","ANDROID_NDK","runAutomaticFix","loader","environmentInfo","isNDKInstalled","fail","message","chalk","dim","healthcheck","url"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;;AACA;;AACA;;;;eAGe;AACbA,EAAAA,KAAK,EAAE,aADM;AAEbC,EAAAA,WAAW,EAAE,oDAFA;AAGbC,EAAAA,cAAc,EAAE,OAAO;AAACC,IAAAA;AAAD,GAAP,KAAmC;AACjD,UAAMC,UAAU,GAAGD,IAAI,CAAC,aAAD,CAAvB;AACA,UAAME,OAAO,GACXD,UAAU,KAAK,WAAf,GAA6BA,UAA7B,GAA0CA,UAAU,CAAC,aAAD,CADtD;AAGA,WAAO;AACLE,MAAAA,cAAc,EAAE,kDAA0B;AACxCD,QAAAA,OADwC;AAExCE,QAAAA,YAAY,EAAEC,uBAAcC;AAFY,OAA1B,CADX;AAKLJ,MAAAA,OALK;AAMLE,MAAAA,YAAY,EAAEC,uBAAcC;AANvB,KAAP;AAQD,GAhBY;AAiBbC,EAAAA,eAAe,EAAE,OAAO;AACtBC,IAAAA,MADsB;AAEtBC,IAAAA;AAFsB,GAAP,KAMX;AACJ,UAAMR,UAAU,GAAGQ,eAAe,CAACT,IAAhB,CAAqB,aAArB,CAAnB;AACA,UAAMU,cAAc,GAClBT,UAAU,KAAK,WAAf,IAA8BA,UAAU,CAAC,aAAD,CAAV,KAA8B,WAD9D;AAGAO,IAAAA,MAAM,CAACG,IAAP;;AAEA,QAAID,cAAJ,EAAoB;AAClB,aAAO,mCAAsB;AAC3BE,QAAAA,OAAO,EAAG,gDAA+CC,iBAAMC,GAAN,CACvD,6CADuD,CAEvD;AAHyB,OAAtB,CAAP;AAKD;;AAED,WAAO,mCAAsB;AAC3BC,MAAAA,WAAW,EAAE,aADc;AAE3BC,MAAAA,GAAG,EAAE;AAFsB,KAAtB,CAAP;AAID;AA1CY,C","sourcesContent":["import chalk from 'chalk';\nimport {Ora} from 'ora';\nimport {logManualInstallation} from './common';\nimport versionRanges from '../versionRanges';\nimport {doesSoftwareNeedToBeFixed} from '../checkInstallation';\nimport {EnvironmentInfo, HealthCheckInterface} from '../types';\n\nexport default {\n  label: 'Android NDK',\n  description: 'Required for building React Native from the source',\n  getDiagnostics: async ({SDKs}: EnvironmentInfo) => {\n    const androidSdk = SDKs['Android SDK'];\n    const version =\n      androidSdk === 'Not Found' ? androidSdk : androidSdk['Android NDK'];\n\n    return {\n      needsToBeFixed: doesSoftwareNeedToBeFixed({\n        version,\n        versionRange: versionRanges.ANDROID_NDK,\n      }),\n      version,\n      versionRange: versionRanges.ANDROID_NDK,\n    };\n  },\n  runAutomaticFix: async ({\n    loader,\n    environmentInfo,\n  }: {\n    loader: Ora;\n    environmentInfo: EnvironmentInfo;\n  }) => {\n    const androidSdk = environmentInfo.SDKs['Android SDK'];\n    const isNDKInstalled =\n      androidSdk !== 'Not Found' && androidSdk['Android NDK'] !== 'Not Found';\n\n    loader.fail();\n\n    if (isNDKInstalled) {\n      return logManualInstallation({\n        message: `Read more about how to update Android NDK at ${chalk.dim(\n          'https://developer.android.com/ndk/downloads',\n        )}`,\n      });\n    }\n\n    return logManualInstallation({\n      healthcheck: 'Android NDK',\n      url: 'https://developer.android.com/ndk/downloads',\n    });\n  },\n} as HealthCheckInterface;\n"]}