{"version":3,"sources":["../../../src/commands/server/launchDebugger.ts"],"names":["commandExistsUnixSync","commandName","stdout","error","getChromeAppName","process","platform","launchChrome","url","app","wait","launchDebugger","logger","debug","info","chalk","underline","dim"],"mappings":";;;;;;;AASA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAbA;;;;;;;;AAeA,SAASA,qBAAT,CAA+BC,WAA/B,EAAoD;AAClD,MAAI;AACF,UAAMC,MAAM,GAAG,+BACZ,cAAaD,WAAY,cAA1B,GACG,mBAAkBA,WAAY,oBAFpB,CAAf;AAIA,WAAO,CAAC,CAACC,MAAT;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACd,WAAO,KAAP;AACD;AACF;;AAED,SAASC,gBAAT,GAAoC;AAClC,UAAQC,OAAO,CAACC,QAAhB;AACE,SAAK,QAAL;AACE,aAAO,eAAP;;AACF,SAAK,OAAL;AACE,aAAO,QAAP;;AACF,SAAK,OAAL;AACE,UAAIN,qBAAqB,CAAC,eAAD,CAAzB,EAA4C;AAC1C,eAAO,eAAP;AACD;;AACD,UAAIA,qBAAqB,CAAC,kBAAD,CAAzB,EAA+C;AAC7C,eAAO,kBAAP;AACD;;AACD,aAAO,UAAP;;AAEF;AACE,aAAO,eAAP;AAfJ;AAiBD;;AAED,SAASO,YAAT,CAAsBC,GAAtB,EAAmC;AACjC,SAAO,qBAAKA,GAAL,EAAU;AAACC,IAAAA,GAAG,EAAE,CAACL,gBAAgB,EAAjB,CAAN;AAA4BM,IAAAA,IAAI,EAAE;AAAlC,GAAV,CAAP;AACD;;AAED,eAAeC,cAAf,CAA8BH,GAA9B,EAA2C;AACzC,MAAI;AACF,UAAMD,YAAY,CAACC,GAAD,CAAlB;AACD,GAFD,CAEE,OAAOL,KAAP,EAAc;AACdS,uBAAOC,KAAP,CAAaV,KAAb;;AACAS,uBAAOE,IAAP,CACG,wEAAuEC,iBAAMC,SAAN,CAAgBC,GAAhB,CACtE,gCADsE,CAEtE,EAHJ;;AAKA,uCAAqBT,GAArB;AACD;AACF;;eAEcG,c","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport open from 'open';\nimport {execSync} from 'child_process';\nimport {logger} from '@react-native-community/cli-tools';\nimport launchDefaultBrowser from './launchDefaultBrowser';\nimport chalk from 'chalk';\n\nfunction commandExistsUnixSync(commandName: string) {\n  try {\n    const stdout = execSync(\n      `command -v ${commandName} 2>/dev/null` +\n        ` && { echo >&1 '${commandName} found'; exit 0; }`,\n    );\n    return !!stdout;\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction getChromeAppName(): string {\n  switch (process.platform) {\n    case 'darwin':\n      return 'google chrome';\n    case 'win32':\n      return 'chrome';\n    case 'linux':\n      if (commandExistsUnixSync('google-chrome')) {\n        return 'google-chrome';\n      }\n      if (commandExistsUnixSync('chromium-browser')) {\n        return 'chromium-browser';\n      }\n      return 'chromium';\n\n    default:\n      return 'google-chrome';\n  }\n}\n\nfunction launchChrome(url: string) {\n  return open(url, {app: [getChromeAppName()], wait: true});\n}\n\nasync function launchDebugger(url: string) {\n  try {\n    await launchChrome(url);\n  } catch (error) {\n    logger.debug(error);\n    logger.info(\n      `For a better debugging experience please install Google Chrome from: ${chalk.underline.dim(\n        'https://www.google.com/chrome/',\n      )}`,\n    );\n    launchDefaultBrowser(url);\n  }\n}\n\nexport default launchDebugger;\n"]}