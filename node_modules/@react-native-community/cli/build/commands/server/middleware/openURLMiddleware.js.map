{"version":3,"sources":["../../../../src/commands/server/middleware/openURLMiddleware.ts"],"names":["openURLMiddleware","req","res","next","url","JSON","parse","rawBody","logger","info","end"],"mappings":";;;;;;;AAOA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AARA;;;;;;;AAUA;;;AAGe,SAASA,iBAAT,CACbC,GADa,EAEbC,GAFa,EAGbC,IAHa,EAIb;AACA,MAAIF,GAAG,CAACG,GAAJ,KAAY,WAAhB,EAA6B;AAC3B,UAAM;AAACA,MAAAA;AAAD,QAAQC,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACM,OAAf,CAAd;;AACAC,uBAAOC,IAAP,CAAa,WAAUL,GAAI,KAA3B;;AACA,uCAAqBA,GAArB;AACAF,IAAAA,GAAG,CAACQ,GAAJ,CAAQ,IAAR;AACD,GALD,MAKO;AACLP,IAAAA,IAAI;AACL;AACF","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport http from 'http';\nimport launchDefaultBrowser from '../launchDefaultBrowser';\nimport {logger} from '@react-native-community/cli-tools';\n\n/**\n * Handle request from JS to open an arbitrary URL in Chrome\n */\nexport default function openURLMiddleware(\n  req: http.IncomingMessage & {rawBody: string},\n  res: http.ServerResponse,\n  next: (err?: any) => void,\n) {\n  if (req.url === '/open-url') {\n    const {url} = JSON.parse(req.rawBody);\n    logger.info(`Opening ${url}...`);\n    launchDefaultBrowser(url);\n    res.end('OK');\n  } else {\n    next();\n  }\n}\n"]}