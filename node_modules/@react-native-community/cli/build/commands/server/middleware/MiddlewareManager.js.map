{"version":3,"sources":["../../../../src/commands/server/middleware/MiddlewareManager.ts"],"names":["MiddlewareManager","constructor","options","app","use","getSecurityHeadersMiddleware","loadRawBodyMiddleware","openURLMiddleware","statusPageMiddleware","systraceProfileMiddleware","indexPageMiddleware","serveStatic","folder","getConnectInstance","attachDevToolsSocket","socket","isDebuggerConnected"],"mappings":";;;;;;;AAOA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAae,MAAMA,iBAAN,CAAwB;AAKrCC,EAAAA,WAAW,CAACC,OAAD,EAAmB;AAAA;;AAAA;;AAC5B,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,GAAL,GAAW,0BACRC,GADQ,CACJC,qCADI,EAERD,GAFQ,CAEJE,8BAFI,EAGT;AAHS,KAIRF,GAJQ,CAIJ,6BAJI,EAKRA,GALQ,CAKJ,cALI,EAKY,4CALZ,EAMRA,GANQ,CAMJ,+CAAiC,KAAKF,OAAtC,CANI,EAORE,GAPQ,CAOJG,0BAPI,EAQRH,GARQ,CAQJI,6BARI,EASRJ,GATQ,CASJK,kCATI,EAURL,GAVQ,CAUJM,kBAVI,EAWRN,GAXQ,CAWJ,8BAXI,CAAX;AAYD;;AAEDO,EAAAA,WAAW,CAACC,MAAD,EAAiB;AAC1B;AACA,SAAKT,GAAL,CAASC,GAAT,CAAa,4BAAYQ,MAAZ,CAAb;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,WAAO,KAAKV,GAAZ;AACD;;AAEDW,EAAAA,oBAAoB,CAACC,MAAD,EAAyB;AAC3C,SAAKZ,GAAL,CAASC,GAAT,CACE,oCAAsB,KAAKF,OAA3B,EAAoC,MAAMa,MAAM,CAACC,mBAAP,EAA1C,CADF;AAGD;;AAlCoC","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport compression from 'compression';\nimport connect from 'connect';\nimport errorhandler from 'errorhandler';\nimport {Server as WebSocketServer} from 'ws';\nimport serveStatic from 'serve-static';\nimport {debuggerUIMiddleware} from '@react-native-community/cli-debugger-ui';\nimport indexPageMiddleware from './indexPage';\nimport getSecurityHeadersMiddleware from './getSecurityHeadersMiddleware';\nimport loadRawBodyMiddleware from './loadRawBodyMiddleware';\nimport openStackFrameInEditorMiddleware from './openStackFrameInEditorMiddleware';\nimport openURLMiddleware from './openURLMiddleware';\nimport statusPageMiddleware from './statusPageMiddleware';\nimport systraceProfileMiddleware from './systraceProfileMiddleware';\nimport getDevToolsMiddleware from './getDevToolsMiddleware';\n\ntype Options = {\n  host?: string;\n  watchFolders: Array<string>;\n  port: number;\n};\n\ntype WebSocketProxy = {\n  server?: WebSocketServer;\n  isDebuggerConnected: () => boolean;\n};\n\nexport default class MiddlewareManager {\n  app: connect.Server;\n\n  options: Options;\n\n  constructor(options: Options) {\n    this.options = options;\n    this.app = connect()\n      .use(getSecurityHeadersMiddleware)\n      .use(loadRawBodyMiddleware)\n      // @ts-ignore compression and connect types mismatch\n      .use(compression())\n      .use('/debugger-ui', debuggerUIMiddleware())\n      .use(openStackFrameInEditorMiddleware(this.options))\n      .use(openURLMiddleware)\n      .use(statusPageMiddleware)\n      .use(systraceProfileMiddleware)\n      .use(indexPageMiddleware)\n      .use(errorhandler());\n  }\n\n  serveStatic(folder: string) {\n    // @ts-ignore serveStatic and connect types mismatch\n    this.app.use(serveStatic(folder));\n  }\n\n  getConnectInstance() {\n    return this.app;\n  }\n\n  attachDevToolsSocket(socket: WebSocketProxy) {\n    this.app.use(\n      getDevToolsMiddleware(this.options, () => socket.isDebuggerConnected()),\n    );\n  }\n}\n"]}